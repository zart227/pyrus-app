#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

case "$1" in
  up)
    echo "üöÄ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Å hot reload)..."
    docker compose -f docker-compose.dev.yml up -d --build
    echo ""
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    echo ""
    echo "üìç –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
    echo "   - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (Nginx):      http://localhost:8082"
    echo "   - Frontend (Vite dev):     http://localhost:8081"
    echo "   - Backend API:             http://localhost:8000"
    echo "   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:        http://localhost:8000/docs"
    echo ""
    echo "üìù –ö–æ–º–∞–Ω–¥—ã:"
    echo "   –õ–æ–≥–∏:           ./dev.sh logs"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:     ./dev.sh down"
    echo "   –°—Ç–∞—Ç—É—Å:         ./dev.sh ps"
    ;;
    
  down)
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker compose -f docker-compose.dev.yml down
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    ;;
    
  logs)
    if [ -z "$2" ]; then
      echo "üìã –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..."
      docker compose -f docker-compose.dev.yml logs -f
    else
      echo "üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞: $2 (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)..."
      docker compose -f docker-compose.dev.yml logs -f "$2"
    fi
    ;;
    
  ps)
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker compose -f docker-compose.dev.yml ps
    ;;
    
  restart)
    if [ -z "$2" ]; then
      echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
      docker compose -f docker-compose.dev.yml restart
    else
      echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞: $2..."
      docker compose -f docker-compose.dev.yml restart "$2"
    fi
    echo "‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω"
    ;;
    
  rebuild)
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker compose -f docker-compose.dev.yml up -d --build --force-recreate
    echo "‚úÖ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    ;;
    
  prod)
    echo "üè≠ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ production —Ä–µ–∂–∏–º..."
    docker compose -f docker-compose.dev.yml down
    docker compose up -d --build
    echo "‚úÖ Production —Ä–µ–∂–∏–º –∑–∞–ø—É—â–µ–Ω"
    echo "   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:  http://localhost:8082"
    ;;
    
  *)
    echo "üõ†  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ Pyrus Tasks"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./dev.sh [–∫–æ–º–∞–Ω–¥–∞] [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  up          –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo "  down        –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  logs [srv]  –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞)"
    echo "  ps          –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  restart     –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    echo "  rebuild     –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
    echo "  prod        –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ production —Ä–µ–∂–∏–º"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./dev.sh up                 # –ó–∞–ø—É—Å—Ç–∏—Ç—å dev —Ä–µ–∂–∏–º"
    echo "  ./dev.sh logs backend       # –õ–æ–≥–∏ —Ç–æ–ª—å–∫–æ backend"
    echo "  ./dev.sh restart frontend   # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å frontend"
    echo "  ./dev.sh prod               # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ production"
    ;;
esac

